server:
  port: ${PORT:8081}
logging:
  level:
#    root: debug
#    org.sumo.klogs: DEBUG
    org.apache.kafka.streams.processor.internals: WARN

spring:
  application:
    name: work-count

  cloud:
    stream:
      bindings:
        input:
          destination: words
          #group: work-count
          consumer:
            headerMode: raw
            #startOffset: earliest
            #resetOffsets: true
        output:
          contentType: application/json
          destination: counts
          producer:
            headerMode: raw
            useNativeEncoding: true
            #partitioned: true
            #partition-key-expression: headers['partitionKey']
            #partition-count: 12
            #valueSerde: org.apache.kafka.common.serialization.Serdes$ByteArraySerde

      kstream:
        timeWindow:
          length: 5000
          advanceBy: 0
        binder:
          brokers: 127.0.0.1
          zkNodes: 127.0.0.1
          configuration:
            commit.interval.ms: 1000
            key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
            value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
            default.deserialization.exception.handler: org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
            application.id: work-count
